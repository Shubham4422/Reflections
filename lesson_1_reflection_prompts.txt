How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It helps us to know the diffrence between the old and the current file line by line.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It helps us to be more contentful and learned so we may not repeat few fail attempts and would focus on in a right 
	direction.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    If make changes too often then it may result in so many commits in a short duration ruining the whole purpose. 
	While on the other hand if we save it on our own we can easily remember what changes we did in the past and also it 
	would not be a bulky record to check.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    In most of the projects all the files are inter-related to each other so it is wiseful to update all the files 
	together within a commit.

How can you use the commands git log and git diff to view the history of files?

    They are helpful in looking at the changes made in the past with the author name and notes to give a brief idea of
	what has been changed during this commit.

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
